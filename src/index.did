service: () -> {
    buyTicket: (record {pay:nat64; ticketId:text}) -> (variant {Ok:record {id:text; pay:nat64; mode:text; createdAt:nat64; organizerId:principal; ticketId:text; updatedAt:nat64; participantId:principal; senderId:opt principal}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
    createEvent: (record {date:nat64; name:text; location:text}) -> (variant {Ok:record {id:text; date:nat64; name:text; createdAt:nat64; organizerId:principal; updatedAt:nat64; location:text}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
    createTickets: (nat32, record {eventId:text; role:text; price:nat64}) -> (variant {Ok:vec record {id:text; eventId:text; createdAt:nat64; role:text; organizerId:principal; updatedAt:nat64; participantId:opt principal; price:nat64}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
    createUser: (record {name:text; role:text}) -> (variant {Ok:record {id:principal; name:text; createdAt:nat64; role:text; updatedAt:nat64}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
    getEvents: () -> (variant {Ok:vec record {id:text; date:nat64; name:text; createdAt:nat64; organizerId:principal; updatedAt:nat64; location:text}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}}) query;
    getMe: () -> (variant {Ok:record {id:principal; name:text; createdAt:nat64; role:text; updatedAt:nat64}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}}) query;
    getMyTickets: () -> (variant {Ok:vec record {id:text; eventId:text; createdAt:nat64; role:text; organizerId:principal; updatedAt:nat64; participantId:opt principal; price:nat64}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}}) query;
    getMyTransactions: () -> (variant {Ok:vec record {id:text; pay:nat64; mode:text; createdAt:nat64; organizerId:principal; ticketId:text; updatedAt:nat64; participantId:principal; senderId:opt principal}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}}) query;
    getTicketsByEvent: (text) -> (variant {Ok:vec record {id:text; eventId:text; createdAt:nat64; role:text; organizerId:principal; updatedAt:nat64; participantId:opt principal; price:nat64}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}}) query;
    transferTicket: (text, principal) -> (variant {Ok:record {id:text; pay:nat64; mode:text; createdAt:nat64; organizerId:principal; ticketId:text; updatedAt:nat64; participantId:principal; senderId:opt principal}; Err:variant {NotFound:text; Unauthorized:text; InternalError:text; Forbidden:text; BadRequest:text}});
}
